/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.4.1/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'

// Apply the application plugin to add support for building an application
apply plugin: 'application'

apply {
    plugin 'eclipse'
    plugin 'checkstyle'
    plugin 'findbugs'
    plugin 'jacoco'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8
version = '1.0.0'

[compileJava, compileTestJava]*.options*.encoding = "UTF-8"
javadoc {
    options {
        charSet = 'UTF-8'
        encoding = 'UTF-8'
    }
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

[checkstyleMain, checkstyleTest, findbugsMain, findbugsTest]*.ignoreFailures = true

configurations {
    provided
}

sourceSets {
    main {
        compileClasspath += configurations.provided
    }
}

eclipse.classpath {
    plusConfigurations += [ configurations.provided ]
}

dependencies {
    // Use JUnit test framework
    testCompile 'junit:junit:4.12'
    testCompile "org.hamcrest:hamcrest-all:1.3"

    compile 'args4j:args4j:2.0.16'
    provided 'org.projectlombok:lombok:1.16.4'
}

// Define the main class for the application
mainClassName = 'jp.dip.oyasirazu.artags.Main'

test {
    doLast {
        tasks.jacocoTestReport.execute()
    }
}

jacocoTestReport {
    reports {
        xml.enabled = false
        html.enabled = true
        html.destination = "${buildDir}/reports/jacoco"
    }
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

tasks.withType(Checkstyle) {
    reports {
        xml.enabled false
        html.enabled true
    }
}

jar {
    manifest {
        attributes 'Implementation-Title': 'Create ARXML tags Application.'
        attributes 'Implementation-Version': '1.0.0'
        attributes "Main-Class" : "jp.dip.oyasirazu.artags.Main"
    }
    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
}
